//準備1で利用分
/////////////////////////////////////////////////////
// RIFFチャンクおよびWAVEフォームタイプ構造体
/////////////////////////////////////////////////////
typedef struct{
	char id[4];			// "RIFF"
	unsigned long size;		// ファイルサイズ-8
	char form[4];			// "WAVE"
} riff_chunk;
/////////////////////////////////////////////////////
// fmtチャンク構造体
/////////////////////////////////////////////////////
typedef struct{
	char id[4];			// "fmt " スペースも含まれるので注意
	unsigned long size;		// fmt領域のサイズ
	unsigned short format_id;	// フォーマットID (PCM:1)
	unsigned short channel;		// チャネル数 (モノラル:1 ステレオ:2)
	unsigned long  fs;		// サンプリング周波数
	unsigned long  byte_sec;	// １秒あたりのバイト数（fs×byte_samp)
	unsigned short byte_samp;	// １要素のバイト数（channel×(bit/8)）
	unsigned short bit;		// 量子化ビット数（8 or 16）
} fmt_chunk;

	riff_chunk riff;		//riff_chunk型で変数riffを宣言
	fmt_chunk fmt;


//
//以下メイン等の関数内で
//


/////////////////////////////////////////////////////
// 各チャンクの読み込み例（一つずつ）
/////////////////////////////////////////////////////
	fseek(read,0,SEEK_SET);	//ファイル読み込み位置をファイルの先頭バイトへ

	fread(&riff.id[0], sizeof(char),1,read);		//'R'を読み込む
	fread(&riff.id[1], sizeof(char),1,read);		//'I'を読み込む
	fread(&riff.id[2], sizeof(char),1,read);		//'F'を読み込む
	fread(&riff.id[3], sizeof(char),1,read);		//'F'を読み込む

	fread(&riff.size, sizeof(unsigned long),1,read);	//ファイルサイズを読み込む
　　　　　　以下略
